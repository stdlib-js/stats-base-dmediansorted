// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var e="function"==typeof Object.defineProperty?Object.defineProperty:null;var r,t=Object.defineProperty,a=Object.prototype,o=a.toString,n=a.__defineGetter__,l=a.__defineSetter__,i=a.__lookupGetter__,u=a.__lookupSetter__;r=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var c,_,p,f;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((_="value"in t)&&(i.call(e,r)||u.call(e,r)?(c=e.__proto__,e.__proto__=a,delete e[r],e[r]=t.value,e.__proto__=c):e[r]=t.value),p="get"in t,f="set"in t,_&&(p||f))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&n&&n.call(e,r,t.get),f&&l&&l.call(e,r,t.set),e};var c=r;var _=Math.floor;function p(e,r,t){var a,o,n;return e<=0?NaN:(a=t<0?(1-e)*t:0,(o=e/2)===(n=_(o))?(r[a+n*t]+r[a+(n-1)*t])/2:r[a+n*t])}function f(e,r,t,a){var o,n;return e<=0?NaN:(o=e/2)===(n=_(o))?(r[a+n*t]+r[a+(n-1)*t])/2:r[a+n*t]}c(p,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:f});export{p as default,f as ndarray};
//# sourceMappingURL=mod.js.map
