{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/dmediansorted.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport floor from '@stdlib/math-base-special-floor';\n\n\n// MAIN //\n\n/**\n* Computes the median value of a sorted double-precision floating-point strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - sorted input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} median value\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 2.0, -3.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dmediansorted( 4, x, 2, 1 );\n* // returns 0.0\n*/\nfunction dmediansorted( N, x, strideX, offsetX ) {\n\tvar n;\n\tvar m;\n\n\tif ( N <= 0 ) {\n\t\treturn NaN;\n\t}\n\tn = N / 2;\n\tm = floor( n );\n\tif ( n === m ) {\n\t\t// Even number of elements...\n\t\treturn ( x[ offsetX+(m*strideX) ] + x[ offsetX+((m-1)*strideX) ] ) / 2.0; // eslint-disable-line max-len\n\t}\n\t// Odd number of elements...\n\treturn x[ offsetX+(m*strideX) ];\n}\n\n\n// EXPORTS //\n\nexport default dmediansorted;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the median value of a sorted double-precision floating-point strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Float64Array} x - sorted input array\n* @param {integer} strideX - stride length\n* @returns {number} median value\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 1.0, 2.0, 3.0 ] );\n*\n* var v = dmediansorted( x.length, x, 1 );\n* // returns 2.0\n*/\nfunction dmediansorted( N, x, strideX ) {\n\treturn ndarray( N, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default dmediansorted;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport dmediansorted from './dmediansorted.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( dmediansorted, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dmediansorted;\n"],"names":["dmediansorted","N","x","strideX","offsetX","n","m","NaN","floor","ndarray","stride2offset","setReadOnly"],"mappings":";;+TA4CA,SAASA,EAAeC,EAAGC,EAAGC,EAASC,GACtC,IAAIC,EACAC,EAEJ,OAAKL,GAAK,EACFM,KAERF,EAAIJ,EAAI,MACRK,EAAIE,EAAOH,KAGDH,EAAGE,EAASE,EAAEH,GAAaD,EAAGE,GAAUE,EAAE,GAAGH,IAAe,EAG/DD,EAAGE,EAASE,EAAEH,EACtB,CCfA,SAASH,EAAeC,EAAGC,EAAGC,GAC7B,OAAOM,EAASR,EAAGC,EAAGC,EAASO,EAAeT,EAAGE,GAClD,CCjBAQ,EAAAX,EAAA,UAAAS"}